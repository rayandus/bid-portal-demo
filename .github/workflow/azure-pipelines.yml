# Trigger pipeline from branches
trigger:
  branches:
    include:
    - develop

# Trigger pipeline from PRs. Currently, has to be configured in Azure DevOps settings for it to fully work
pr:
  autoCancel: true
  branches:
    include:
      - develop

# Environment to use
pool:
  vmImage: 'ubuntu-latest'

# nodeVersion: '18.x'
# isDevBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]

variables:
  - name: nodeVersion
    value: '18.x'
  - name: isDevBranch
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  # - name: TEST_VAR
  #   value: ${{ Build.SourceBranch }}

steps:
# Test print variable
- script: echo ${Build.SourceBranch}
  displayName: 'Test print variable'

# Use Node version 18.x
- task: NodeTool@0
  inputs:
    versionSpec: $(nodeVersion)
  displayName: 'Use Node.js $(nodeVersion)'

# Use pnpm (much faster)
- script: |
    npm install -g pnpm
  displayName: 'Install pnpm'

# Install the packages
- script: |
    pnpm install
  displayName: 'Install project packages'

# Pre-build checks: lint, test
- script: |
    pnpm lint
  displayName: 'Pre-build checks: lint, test'

# Build the project
- script: |
    pnpm build
  displayName: 'Build project'

# Set artifact name
- pwsh: |
    if ("$(isDevBranch)" -eq "True") 
    {
      Write-Host "##vso[task.setvariable variable=artifactName;]artifact-develop"
    }
    else
    {
      Write-Host "##vso[task.setvariable variable=artifactName;]artifact"
    }
  displayName: 'Set Artifact Name'

# Publish the build artifact
- task: PublishBuildArtifacts@1
  inputs:
    # dist folder only. We don't need the rest of the files
    pathtoPublish: 'dist'
    artifactName: $(artifactName)
    publishLocation: 'Container'
  # Exclude PRs from creating an artifact
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['isDevBranch'], true))
